@using time_trace.Components
@using System.Diagnostics
@using System.Text.Json
@model time_trace.Models.Schedule
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    ViewData["Title"] = Model.Name;
    var requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
    var postDateApi = @Url.Action(action: "Edit", controller: "Schedule");

    string userName = "";
    HashSet<DateTime> InitialUserTimes = new();
    Dictionary<DateTime, HashSet<String>> InitialAllTimes = new();

    // InitialUserTimes.Add(DateTime.Parse("Thu, 03 Oct 2024 02:00:00 GMT"));

    if (User.Identity != null) userName = @User.Identity.Name ?? "";
    var userSchedule = Model.UserSchedules.FirstOrDefault(u => u.User.UserName == userName);
    if (userSchedule != null)
    {
        InitialUserTimes.UnionWith(userSchedule.TimeSlots.Select(t => t.DateTime));

        foreach (var timeSlot in Model.UserSchedules.SelectMany(us => us.TimeSlots))
        {
            if (!InitialAllTimes.ContainsKey(timeSlot.DateTime))
            {
                InitialAllTimes.Add(timeSlot.DateTime, new HashSet<String>());
            }
            InitialAllTimes[timeSlot.DateTime].Add(timeSlot.UserSchedule.User.UserName);
        }
    }

    Debug.WriteLine($"INITIAL USER TIMES: [{string.Join(" | ", InitialUserTimes)}]");
    Debug.WriteLine($"OTHER USER TIMES: [{string.Join(" | ", InitialAllTimes.Values.SelectMany(h => h))}]");

    var JSONARGS = JsonSerializer.Serialize(new {
        user = userName,
        initialUserTimes = InitialUserTimes.Select(t => new DateTimeOffset(t).ToUnixTimeMilliseconds()),
        initialAllTimes = InitialAllTimes,
        requestToken = requestToken,
        postDateApi = @postDateApi,
    });
}

<div class="text-center">
    
    <div data-react-component="DateDisplay" data-args="@JSONARGS"></div>
</div>
